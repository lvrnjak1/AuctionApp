
pipeline {
  agent any

  environment {
      JDBC_DATABASE_URL = credentials('JDBC_DATABASE_URL')
      JDBC_DATABASE_USERNAME = credentials('JDBC_DATABASE_USERNAME')
      JDBC_DATABASE_PASSWORD = credentials('JDBC_DATABASE_PASSWORD')
      MAIL_API_KEY = credentials('MAIL_API_KEY')
      SENDER = credentials('SENDER')
      RESET_URL = credentials('RESET_URL')
      JWT_SECRET= credentials('JWT_SECRET')
      REACT_APP_API_URL = credentials('REACT_APP_API_URL')
      PORT= credentials('PORT')
  }

  stages {
    stage("Setup environment variables") {
      steps {
        sh "export JDBC_DATABASE_PASSWORD=${JDBC_DATABASE_PASSWORD} && export JDBC_DATABASE_USERNAME=${JDBC_DATABASE_USERNAME}"
                sh "export MAIL_API_KEY=${MAIL_API_KEY} && export SENDER=${SENDER} && export RESET_URL=${RESET_URL}"
                sh "export JWT_SECRET=${JWT_SECRET} && export REACT_APP_API_URL=${REACT_APP_API_URL} && export PORT=${PORT}"
      }
    }

    stage("Prepare Postgres container") {
      steps {
        sh "docker run --rm --name psql-ms-test -e POSTGRES_USER=${JDBC_DATABASE_USERNAME} -e POSTGRES_PASSWORD=${JDBC_DATABASE_PASSWORD} -dp 5432:5432 postgres"
      }
    }

    stage("Run tests") {
      steps {
        sh "cd ./backend && mvn test"
      }
    }
  }

  post {
    always {
      sh "docker stop psql-ms-test || true"
      cleanWs()
    }
  }
}





